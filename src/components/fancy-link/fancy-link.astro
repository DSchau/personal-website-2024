---
import { Icon } from 'astro-icon/components'
const { href, target = '', ...rest } = Astro.props

const hostname = href.split(/https?:\/+(?:www)?\.?/)?.at(1)

const icon = (() => {
  if (hostname.match('wikipedia.org')) {
    return 'wikipedia'
  } else if (hostname.match('spotify.com')) {
    return 'spotify'
  } else if (hostname.match('imdb.com')) {
    return 'imdb'
  } else if (hostname.match('goodreads.com')) {
    return 'goodreads'
  }
  return ''
})() as string | undefined
---
<style scoped>
  :root {
    --icon-size-md: 18px;
    --icon-size-lg: 24px;
  }
  a {
    text-decoration: none;
    display: block;
    position: relative;
  }

  a[data-icon-type] {
    padding-right: var(--icon-size-md);
  }

  a[data-icon-type="imdb"] {
    padding-right: calc(var(--icon-size-lg) + var(--padding-md));
  }

  a[data-icon-type="wikipedia"] {
    padding-right: var(--icon-size-lg);
  }

  a:hover {
    text-decoration: underline;
    text-decoration-skip: ink;
  }

  a svg {
    position: absolute;
    top: 0;
    right: 0;
    
    height: var(--icon-size-md);
    width: var(--icon-size-md);
  }

  a svg[data-label="imdb"] {
    top: 0;
  
    height: var(--icon-size-lg);
    width: var(--icon-size-lg);
  }
</style>

<a href={href} target={target} {...rest} data-icon-type={icon}>
  {icon && <Icon name={icon} data-label={icon} />}
  <slot />
</a>
